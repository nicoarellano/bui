export interface HasValue {
    value: any;
    onValueChange: Event;
}
export interface HasName {
    name?: string;
    label?: string;
}
export type QueryCondition = "=" | ">" | ">=" | "<" | "<=" | "?" | "/" | "#";
export type QueryOperators = "&" | "|";
export interface EntryQuery {
    operator?: QueryOperators;
    key: string;
    condition: QueryCondition;
    value: string | number | boolean;
}
export interface QueryGroup {
    operator?: QueryOperators;
    queries: (EntryQuery | QueryGroup)[];
}
export type Query = (EntryQuery | QueryGroup)[];
export type ConditionFunctions = {
    [queryCondition in QueryCondition]: (leftValue: string | boolean | number, rightValue: string | boolean | number) => boolean;
};
